/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: 'sanity.imagePaletteSwatch';
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: 'sanity.imagePalette';
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: 'sanity.imageDimensions';
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: 'sanity.fileAsset';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type Geopoint = {
  _type: 'geopoint';
  lat?: number;
  lng?: number;
  alt?: number;
};

export type PaddingBlock = {
  _type: 'paddingBlock';
  paddingTop?: Padding;
  paddingBottom?: Padding;
};

export type RichText = Array<
  | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: 'span';
        _key: string;
      }>;
      style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote';
      listItem?: 'bullet' | 'number';
      markDefs?: Array<{
        href?: string;
        _type: 'link';
        _key: string;
      }>;
      level?: number;
      _type: 'block';
      _key: string;
    }
  | {
      asset?: {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: 'image';
      _key: string;
    }
>;

export type ExternalLink = {
  _type: 'externalLink';
  href?: string;
  blank?: boolean;
};

export type Cta = {
  _type: 'cta';
  ctaLabel?: string;
  ctaLink?: CtaLink;
};

export type ContactForm = {
  _type: 'contactForm';
  id?: string;
  title?: string;
  paddingBlock?: {
    paddingTop?: Padding;
    paddingBottom?: Padding;
  };
  cta?: {
    ctaLabel?: string;
    ctaLink?: CtaLink;
  };
};

export type IconsSwiper = {
  _type: 'iconsSwiper';
  id?: string;
  title?: string;
  paddingBlock?: {
    paddingTop?: Padding;
    paddingBottom?: Padding;
  };
  icons?: Array<string>;
};

export type Projects = {
  _type: 'projects';
  id?: string;
  title?: string;
  paddingBlock?: {
    paddingTop?: Padding;
    paddingBottom?: Padding;
  };
  items?: Array<{
    link?: CtaLink;
    image?: {
      asset?: {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: 'image';
    };
    title?: string;
    richText?: RichText;
    tag?: Array<string>;
    _type: 'item';
    _key: string;
  }>;
};

export type Blogs = {
  _type: 'blogs';
  id?: string;
  title?: string;
  paddingBlock?: {
    paddingTop?: Padding;
    paddingBottom?: Padding;
  };
  items?: Array<{
    link?: CtaLink;
    image?: {
      asset?: {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: 'image';
    };
    title?: string;
    richText?: RichText;
    tag?: Array<string>;
    _type: 'item';
    _key: string;
  }>;
};

export type Experiences = {
  _type: 'experiences';
  id?: string;
  title?: string;
  paddingBlock?: {
    paddingTop?: Padding;
    paddingBottom?: Padding;
  };
  items?: Array<{
    startDate?: string;
    endDate?: string;
    role?: string;
    company?: string;
    companyLink?: {
      href?: string;
      blank?: boolean;
    };
    richText?: RichText;
    tag?: Array<{
      label?: string;
      href?: string;
      blank?: boolean;
      _type: 'value';
      _key: string;
    }>;
    skills?: Array<string>;
    _type: 'item';
    _key: string;
  }>;
};

export type ContentsBlock = {
  _type: 'contentsBlock';
  id?: string;
  title?: string;
  paddingBlock?: {
    paddingTop?: Padding;
    paddingBottom?: Padding;
  };
  items?: Array<{
    size?: 'full' | 'half';
    icon?: string;
    tagTitle?: string;
    title?: string;
    richText?: RichText;
    _type: 'item';
    _key: string;
  }>;
};

export type RichTextObj = {
  _type: 'richTextObj';
  id?: string;
  title?: string;
  paddingBlock?: {
    paddingTop?: Padding;
    paddingBottom?: Padding;
  };
  value?: RichText;
};

export type Link = {
  _id: string;
  _type: 'link';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  linkIcon?: string;
  link?: CtaLink;
};

export type TranslationMetadata = {
  _id: string;
  _type: 'translation.metadata';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  translations?: Array<
    {
      _key: string;
    } & InternationalizedArrayReferenceValue
  >;
  schemaTypes?: Array<string>;
};

export type InternationalizedArrayReferenceValue = {
  _type: 'internationalizedArrayReferenceValue';
  value?: {
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: 'page';
  };
};

export type Page = {
  _id: string;
  _type: 'page';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  language?: string;
  title?: string;
  homeBanner?: {
    title?: string;
    textTitle?: RichText;
    subText?: RichText;
  };
  pageBlocks?: Array<
    | ({
        _key: string;
      } & RichTextObj)
    | ({
        _key: string;
      } & ContentsBlock)
    | ({
        _key: string;
      } & Experiences)
    | ({
        _key: string;
      } & Blogs)
    | ({
        _key: string;
      } & Projects)
    | ({
        _key: string;
      } & IconsSwiper)
    | ({
        _key: string;
      } & ContactForm)
  >;
  richText?: RichText;
  seo?: Seo;
};

export type Seo = {
  _type: 'seo';
  seoSlug?: string;
  seoTitle?: string;
  seoDescription?: string;
};

export type CtaLink = {
  _type: 'ctaLink';
  ctaType?: 'internal' | 'external' | 'custom';
  externalLink?: {
    href?: string;
    blank?: boolean;
  };
  internalLink?: {
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: 'page';
  };
  customLink?: string;
};

export type Padding = {
  _type: 'padding';
  value?: '0' | 'S' | 'M' | 'L';
};

export type SanityImageCrop = {
  _type: 'sanity.imageCrop';
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: 'sanity.imageHotspot';
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: 'sanity.imageAsset';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: 'sanity.assetSourceData';
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: 'sanity.imageMetadata';
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type InternationalizedArrayReference = Array<
  {
    _key: string;
  } & InternationalizedArrayReferenceValue
>;

export type InlineSvg = string;

export type MediaTag = {
  _id: string;
  _type: 'media.tag';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: Slug;
};

export type Slug = {
  _type: 'slug';
  current?: string;
  source?: string;
};

export type AllSanitySchemaTypes =
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | SanityFileAsset
  | Geopoint
  | PaddingBlock
  | RichText
  | ExternalLink
  | Cta
  | ContactForm
  | IconsSwiper
  | Projects
  | Blogs
  | Experiences
  | ContentsBlock
  | RichTextObj
  | Link
  | TranslationMetadata
  | InternationalizedArrayReferenceValue
  | Page
  | Seo
  | CtaLink
  | Padding
  | SanityImageCrop
  | SanityImageHotspot
  | SanityImageAsset
  | SanityAssetSourceData
  | SanityImageMetadata
  | InternationalizedArrayReference
  | InlineSvg
  | MediaTag
  | Slug;
export declare const internalGroqTypeReferenceTo: unique symbol;
